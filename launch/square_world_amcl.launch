<launch>
  <arg name="model" default="burger" doc="model type [burger, waffle, waffle_pi]"/>
  <arg name="first_tb3"  default="tb3_0"/>
  <arg name="second_tb3" default="tb3_1"/>
  <arg name="third_tb3"  default="tb3_2"/>

  <arg name="first_tb3_x_pos" default=" 1"/>
  <arg name="first_tb3_y_pos" default=" 0.0"/>
  <arg name="first_tb3_z_pos" default=" 0.0"/>
  <arg name="first_tb3_yaw"   default=" -3.14159265359"/>

  <arg name="second_tb3_x_pos" default=" 0.0"/>
  <arg name="second_tb3_y_pos" default=" 1.0"/>
  <arg name="second_tb3_z_pos" default=" 0.0"/>
  <arg name="second_tb3_yaw"   default=" -1.57079632679"/>

  <arg name="third_tb3_x_pos" default="-1.0"/>
  <arg name="third_tb3_y_pos" default=" 0.0"/>
  <arg name="third_tb3_z_pos" default=" 0.0"/>
  <arg name="third_tb3_yaw"   default=" 0.0"/>

  <arg name="open_rviz" default="true"/>

  <!-- Default value for location of map config file -->
  <arg name="map_file" default="$(find mas)/maps/square.yaml"/>

  <!-- create gazebo world  -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find mas)/worlds/turtlebot3_square.world"/>
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
  </include>  

  <!-- Loads robot_description to parameter server from URDF file -->
  <param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro" />
  <!-- Map Server -->
  <node pkg="map_server" name="map_server" type="map_server" args="$(arg map_file)"/>

  <group ns = "$(arg first_tb3)">
    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
      <param name="publish_frequency" type="double" value="50.0" />
      <param name="tf_prefix" value="$(arg first_tb3)" />
    </node>
    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-urdf -model $(arg first_tb3) -x $(arg first_tb3_x_pos) -y $(arg first_tb3_y_pos) -z $(arg first_tb3_z_pos) -Y $(arg first_tb3_yaw) -param /robot_description" />  
    <!-- AMCL (based on https://github.com/bbingham-nps/turtlebot3_nps) --> 
    <node pkg="amcl" type="amcl" name="amcl">
       <!-- Load default parameters for turtlebot -->
      <rosparam file="$(find mas)/params/amcl.yaml" command="load" />
      <param name="initial_pose_x" value="$(arg first_tb3_x_pos)"/>
      <param name="initial_pose_y" value="$(arg first_tb3_y_pos)"/>
      <param name="initial_pose_a" value="$(arg first_tb3_yaw)"/>

      <param name="odom_frame_id"  value="$(arg first_tb3)/odom"/>
      <param name="base_frame_id"  value="$(arg first_tb3)/base_footprint"/>

      <!-- Use the single map server -->
      <remap from="static_map" to="/static_map"/>
    </node>
  </group>

  <group ns = "$(arg second_tb3)">
    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
      <param name="publish_frequency" type="double" value="50.0" />
      <param name="tf_prefix" value="$(arg second_tb3)" />
    </node>
    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-urdf -model $(arg second_tb3) -x $(arg second_tb3_x_pos) -y $(arg second_tb3_y_pos) -z $(arg second_tb3_z_pos) -Y $(arg second_tb3_yaw) -param /robot_description" />
    <!-- AMCL -->
    <node pkg="amcl" type="amcl" name="amcl">
       <!-- Load default parameters for turtlebot -->
      <rosparam file="$(find mas)/params/amcl.yaml" command="load" />
      <param name="initial_pose_x" value="$(arg second_tb3_x_pos)"/>
      <param name="initial_pose_y" value="$(arg second_tb3_y_pos)"/>
      <param name="initial_pose_a" value="$(arg second_tb3_yaw)"/>

      <param name="odom_frame_id"  value="$(arg second_tb3)/odom"/>
      <param name="base_frame_id"  value="$(arg second_tb3)/base_footprint"/>

      <!-- Use the single map server -->
      <remap from="static_map" to="/static_map"/>
    </node>
  </group>

  <group ns = "$(arg third_tb3)">
    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
      <param name="publish_frequency" type="double" value="50.0" />
      <param name="tf_prefix" value="$(arg third_tb3)" />
    </node>
    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-urdf -model $(arg third_tb3) -x $(arg third_tb3_x_pos) -y $(arg third_tb3_y_pos) -z $(arg third_tb3_z_pos) -Y $(arg third_tb3_yaw) -param /robot_description" />
    <node pkg="amcl" type="amcl" name="amcl">
       <!-- Load default parameters for turtlebot -->
      <rosparam file="$(find mas)/params/amcl.yaml" command="load" />
      <param name="initial_pose_x" value="$(arg third_tb3_x_pos)"/>
      <param name="initial_pose_y" value="$(arg third_tb3_y_pos)"/>
      <param name="initial_pose_a" value="$(arg third_tb3_yaw)"/>

      <param name="odom_frame_id"  value="$(arg third_tb3)/odom"/>
      <param name="base_frame_id"  value="$(arg third_tb3)/base_footprint"/>

      <!-- Use the single map server -->
      <remap from="static_map" to="/static_map"/>
    </node>
  </group>

  <node pkg="tf2_ros" type="static_transform_publisher" name="world2map" args="0 0 0 0 0 0 world map" />
  
  <!-- rviz -->
  <group if="$(arg open_rviz)"> 
    <node pkg="rviz" type="rviz" name="rviz" required="true"
          args="-d $(find mas)/rviz/odom_map.rviz"/>
  </group>
</launch>
